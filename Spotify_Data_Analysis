# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First question I wanted to answer was "Who are the top 10 artists based on popularity?"
SELECT DISTINCT artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

#2 What is the average danceability for the 10 most Popular songs with artist name and track name? 

SELECT artist_name, track_name, avg(danceability)
FROM BIT_DB.Spotifydata
GROUP BY danceability
ORDER BY popularity DESC 
LIMIT 10;

#3 Find all the songs that have an energy between .5 and 1 with the track name and artist name.
SELECT Spotifydata.energy, artist_name, track_name
FROM Spotifydata
WHERE energy > .5 AND energy < 1

#3 Find all the songs that have a liveness between .5 and 1 with the track name and artist name.
SELECT Spotifydata.liveness, artist_name, track_name
FROM Spotifydata
WHERE liveness > .5 AND liveness < 1

#4 What is the average popularity, liveness, loudness, and energy by artist and track. 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(liveness)
,avg(loudness)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name

#5 Who the Top 10 artists are by popularity
SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10;

#6 "Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”
WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name)
SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;







